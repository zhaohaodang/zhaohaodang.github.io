import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.BCqbIoqo.js";const t="/assets/oidn.DfYAhwPb.png",e="/assets/obzl.DiO-Ph-9.png",p="/assets/omjh.gIOx_iJd.png",u=JSON.parse('{"title":"nextjs如何将静态资源发布到CDN","description":"","frontmatter":{"title":"nextjs如何将静态资源发布到CDN","date":"2023-09-05T15:25:23.000Z","tag":["JavaScript","Next.js"]},"headers":[],"relativePath":"posts/2023/nextjs如何将静态资源发布到CDN.md","filePath":"posts/2023/nextjs如何将静态资源发布到CDN.md","lastUpdated":1752485935000}'),h={name:"posts/2023/nextjs如何将静态资源发布到CDN.md"},k=n('<p>将 Nextjs 中的脚本上传到 CDN，可以减轻服务器压力并享受 CDN 带来的其他好处。</p><hr><p>以 Next.js 13 为例，部署项目前我们会执行一次 <code>next build</code> 命令，该命令会生成一个 <code>.next</code> 目录，里面存放了很多脚本。</p><p><img src="'+t+'" alt=""></p><p>部署后访问页面时，可以发现 <code>script</code> 标签的 <code>src</code> 属性都以 <code>/_next/static/</code> 开头。</p><p><img src="'+e+`" alt=""></p><p>这个路径实际上对应 <code>.next/static/</code> 目录。比如 <code>/_next/static/chunks/10361123-9db6883597b575ca.js</code> 对应 <code>.next/static/chunks/10361123-9db6883597b575ca.js</code> 文件。</p><p>现在，我们需要把 <code>.next/static/</code> 目录下的文件上传到 CDN，并修改 <code>src</code> 为对应的 CDN 地址。</p><h2 id="修改配置文件" tabindex="-1">修改配置文件 <a class="header-anchor" href="#修改配置文件" aria-label="Permalink to &quot;修改配置文件&quot;">​</a></h2><p>打开 <code>next.config.js</code> 文件，新加一个 <code>assetPrefix</code> 字段，<a href="https://nextjs.org/docs/pages/api-reference/next-config-js/assetPrefix" target="_blank" rel="noreferrer">assetPrefix 官方文档</a></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isProd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;production&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  assetPrefix: isProd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://cdn.mydomain.com&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>重新构建和部署后，访问页面时脚本地址会变成：</p><p><img src="`+p+`" alt=""></p><p>即在 <code>/_next/static/</code> 路径前加上了 <code>assetPrefix</code>。</p><p><code>assetPrefix</code> 不仅可以是域名，还可以在域名后加其他路径。</p><p>比如 <code>https://cdn.mydomain.com/tag_1.0</code>，这样生成的脚本地址会以 <code>https://cdn.mydomain.com/tag_1.0/_next/static/</code> 开头。</p><p>现在路径已经修改好了，<code>/static/chunks/10361123-9db6883597b575ca.js</code> 变成了 <code>https://cdn.mydomain.com/_next/static/chunks/10361123-9db6883597b575ca.js</code>。</p><p>接下来要上传脚本到 CDN，使其可以通过 <code>https://cdn.mydomain.com/_next/static/chunks/10361123-9db6883597b575ca.js</code> 访问。</p><h2 id="上传资源到-cdn" tabindex="-1">上传资源到 CDN <a class="header-anchor" href="#上传资源到-cdn" aria-label="Permalink to &quot;上传资源到 CDN&quot;">​</a></h2><p>很多云服务商提供对象存储服务，可能需要花钱，但如果网站访问量小，费用很低。</p><p>这里以阿里云 OSS 为例，阿里云 OSS 是什么及其使用方法这里不多讲，使用后你会拿到 <code>accessKeyId</code>、<code>accessKeySecret</code>、<code>region</code>、<code>bucket</code> 这四样信息。</p><p>如果阿里云 OSS 的加速域名为 <code>your-cdn.oss-accelerate.aliyuncs.com</code>，则将 <code>assetPrefix</code> 设置为 <code>https://your-cdn.oss-accelerate.aliyuncs.com</code>。</p><p>Next.js 用 webpack 构建脚本，我们需要编写或者找一个第三方的 webpack 插件，将构建好的脚本上传到阿里云 OSS。</p><p>以 <code>next-oss-webpack-plugin</code> 插件为例，打开 <code> next.config.js</code> 文件，加入如下代码</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NextOSSPlugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;next-oss-webpack-plugin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isProd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;production&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> assetPrefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isProd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://your-cdn.oss-accelerate.aliyuncs.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  :</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  assetPrefix,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  webpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">buildId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (isProd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> buildId) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      config.plugins.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NextOSSPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          region: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bucket 所在区域，比如 oss-cn-hangzhou</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          accessKeyId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          accessKeySecret: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          bucket: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bucket 的名称，比如 my-cdn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;">static</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;--shiki-light-font-weight:bold;--shiki-dark-font-weight:bold;">\\/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(assert),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          assetPrefix: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">assetPrefix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/_next/\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 上传资源前缀</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> config;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>记得先安装插件</p></div><p>上述 <code>accessKeyId</code>、<code>accessKeySecret</code>、<code>region</code>、<code>bucket</code> 都可以在阿里云中获取。</p><p>执行 <code>next build</code> 时，这个插件会将 <code>.next/static/</code> 目录下的资源（包括脚本和 JSON 文件）上传到阿里云 OSS，这样就可以通过加速域名或 CDN 域名访问到这些资源。</p><p>其他云服务商的实现方式类似，特别需要注意的是，上传到云端的路径要包含 <code>/_next/static/</code>，错误的上传路径会导致 404 not found。</p>`,29),l=[k];function d(c,o,r,E,g,y){return a(),i("div",null,l)}const C=s(h,[["render",d]]);export{u as __pageData,C as default};
